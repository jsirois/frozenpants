on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

name: Upload Release Asset

jobs:
  build:
    name: Build Artifacts
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout code
        uses: actions/checkout@master
      - name: Build project
        run: |
          ./build_pex.sh
      - name: Upload Artifact 18.04
        id: upload-artifact-1804
        uses: actions/upload-artifact@v1
        with:
          path: pants.pex
          name: pants-18.04
  release:
    name: Build Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download Artifact 18.06
        id: download-artifact-1804
        uses: actions/download-artifact@v1
        with:
          name: pants-18.0
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.apu_openwrt_token }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release Asset 18.06
        id: upload-release-asset-18
        uses: actions/upload-release-asset@v1.0.1
        env:
          # made by adding a secret to the repository
          GITHUB_TOKEN: ${{ secrets.frozenpants_token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path:  pants-18.04/pants.pex
          asset_name: pants.18.04.pex
          asset_content_type: application/x-gzip
